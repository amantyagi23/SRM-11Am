class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();

        for(int num:nums){
            map.put(num,map.getOrDefault(num,0)+1);
        }
  PriorityQueue<Map.Entry<Integer, Integer>> heap = new PriorityQueue<Map.Entry<Integer, Integer>>(
                (a, b) -> a.getValue() - b.getValue());

    
    for (Map.Entry<Integer, Integer> ele : map.entrySet()) {
            heap.offer(ele);

            if (heap.size() > k) {
                heap.poll();
            }
        }

        int res[] = new int[k];
        int index = 0;
        while (!heap.isEmpty()) {
            res[index++] = heap.poll().getKey();
        }

        return res;

    }
}